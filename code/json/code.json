[
  {
    "option": "Blank",
    "code": {
      "html": "",
      "css": "",
      "js": ""
    }
  },
  {
    "option": "Birthday",
    "code": {
      "html": "<input type=\"number\" id=\"day\" min=\"1\" max=\"31\" value=\"1\"/>\n<input type=\"number\" id=\"month\" min=\"1\" max=\"12\" value=\"1\"/>\n<input type=\"number\" id=\"year\" min=\"0\" max=\"99\" value=\"0\"/>\n<button id=\"update\" onclick=\"birf()\">Birf Colour</button>\n<div class=\"box\" id=\"norm\"></div>\n<div class=\"box\" id=\"invert\"></div>",
      "css": ".box{\n  width:500px;\n  height:500px;\n}",
      "js": "function birf() {\n  var day = document.getElementById(\"day\").value;\n  var month = document.getElementById(\"month\").value;\n  var year = document.getElementById(\"year\").value;\n\n  var styleColor = getRgb(day, month, year);\n  var invertedStyleColor = getRgb();\n\n  console.log(styleColor);\n  console.log(invertedStyleColor);\n  document.getElementById(\"norm\").style.backgroundColor = styleColor;\n  document.getElementById(\"invert\").style.backgroundColor = invertedStyleColor;\n}\n\nfunction rgbInverter(value)\n{\n  return Math.abs((value-255));\n}\n\nfunction getRgb(day, month, year) {\n  console.log(\"getRgb\");\n  var maxRgb = 255;\n  var dayMultiplyer = maxRgb / 31;\n  var monthMultiplyer = maxRgb / 12;\n  var yearMultiplyer = maxRgb / 99;\n\n  var blah = \"rgb(\" +\n    (day * dayMultiplyer) +\n    \",\" +\n    (month * monthMultiplyer) +\n    \",\" +\n    (year * yearMultiplyer) +\n    \")\";\n  \n  console.log(blah);\n  \n  return blah; \n}"
    }
  },
  {
    "option": "FizzBuzz",
    "code": {
      "html": "<form>\n  <label>\n    Divisible number:\n    <input type=\"number\" name=\"num\">\n  </label>\n  <label>\n    Word to display:\n    <input type=\"text\" name=\"word\">\n  </label>\n  <button type=\"button\" id=\"add-btn\">Add</button>\n  <button type=\"submit\" id=\"display-btn\">Display FizzBuzz</button>\n</form>\n<hr>\n<h2>Expanded FizzBuzz Words: <span id=\"firstNumber\"></span></h2>\n<ul id=\"output\">\n  <li>3 - fizz</li>\n  <li>5 - buzz</li>\n</ul>\n\n<h2>Expanded FizzBuzz sequence:</h2>\n<ul id=\"sequence\"></ul>",
      "css": "label {\n  display: block;\n  margin-bottom: 10px;\n}\ninput[type=\"number\"] {\n  width: 50px;\n}\ninput[type=\"text\"] {\n  width: 150px;\n}\nbutton {\n  margin-top: 10px;\n}",
      "js": "const numWords = [\n  { num: 3, word: \"fizz\" },\n  { num: 5, word: \"buzz\" }\n];\nconst form = document.querySelector(\"form\");\nconst addBtn = document.querySelector(\"#add-btn\");\nconst displayBtn = document.querySelector(\"#display-btn\");\nconst outputList = document.querySelector(\"#output\");\nconst sequenceList = document.querySelector(\"#sequence\");\nconst firstNumber = document.querySelector(\"#firstNumber\");\n\naddBtn.addEventListener(\"click\", (event) => {\n  event.preventDefault();\n  const numInput = form.elements.num;\n  const wordInput = form.elements.word;\n  const num = parseInt(numInput.value);\n  const word = wordInput.value.toLowerCase();\n  if (num && word) {\n    numWords.push({ num, word });\n    firstNumber.innerHTML = findFirstNumDivisibleByAll(numWords);\n    const listItem = document.createElement(\"li\");\n    listItem.textContent = `${num} - ${word}`;\n    outputList.appendChild(listItem);\n    numInput.value = \"\";\n    wordInput.value = \"\";\n  }\n});\n\nfunction fizzBuzz(numWords) {\n  const numArray = Array.from(\n    { length: findFirstNumDivisibleByAll(numWords) + 1 },\n    (_, i) => i + 1\n  );\n  const result = numArray.map((num) => {\n    let output = \"\";\n    for (let i = 0; i < numWords.length; i++) {\n      if (num % numWords[i].num === 0) {\n        output += numWords[i].word;\n      }\n    }\n    return output || num;\n  });\n  return result;\n}\n\nform.addEventListener(\"submit\", (event) => {\n  event.preventDefault();\n  const output = fizzBuzz(numWords);\n  outputList.innerHTML = \"\";\n  output.forEach((item) => {\n    const listItem = document.createElement(\"li\");\n    listItem.textContent = item;\n    outputList.appendChild(listItem);\n  });\n});\n\ndisplayBtn.addEventListener(\"click\", (event) => {\n  event.preventDefault();\n  const output = fizzBuzz(numWords);\n  sequenceList.innerHTML = \"\";\n  output.forEach((item) => {\n    const listItem = document.createElement(\"li\");\n    listItem.textContent = item;\n    sequenceList.appendChild(listItem);\n  });\n});\n\nfunction findFirstNumDivisibleByAll(numWords) {\n  const nums = numWords.map((obj) => obj.num);\n  let num = Math.max(...nums);\n  while (true) {\n    if (nums.every((n) => num % n === 0)) {\n      return num;\n    }\n    num += Math.max(...nums);\n  }\n}"
    }
  },
  {
    "option": "VAT",
    "code": {
      "html": "<body>\n     <script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js\"></script>\n     <script src=\"https://s3-us-west-2.amazonaws.com/s.cdpn.io/3/jquery.inputmask.bundle.js\"></script>\n <header>\n    <div class=\"header\"></div>\n  </header>\n  <div class=\"background\">\n    <div class=\"center\">\n      <input id=\"FirstValue\" class=\"currency-input\" type=\"text\" />\n      <label for=\"FirstValue\">First Net Value</label>\n    </div>\n    <div class=\"center\">\n      <input id=\"SecondValue\" class=\"currency-input\" type=\"text\" />\n      <label for=\"SecondValue\">Second Net Value</label>\n    </div>\n    <div class=\"center\">\n      <button class=\"button\" onclick=\"calculateTotals()\">Calculate</button>\n    </div>\n    <div class=\"center\">\n      <input id=\"TotalValue\" class=\"currency-input\" type=\"text\" disabled />\n      <label for=\"TotalValue\">Total Net Value</label>\n    </div>\n    <div class=\"center\">\n      <input id=\"VatValue\" class=\"currency-input\" type=\"text\" disabled />\n      <label for=\"VatValue\">VAT Value</label>\n    </div>\n    <div class=\"center\">\n      <input id=\"GrandTotalValue\" class=\"currency-input\" type=\"text\" disabled />\n      <label for=\"GrandTotalValue\">Total Gross Value</label>\n    </div>\n  </div>\n</body>",
      "css": "/* Use modern fonts */\n@import url('https://fonts.googleapis.com/css2?family=Roboto:wght@400;500&display=swap');\n\n.button,\n.buttonlink {\n  background-color: #4CAF50;\n  color: #fff;\n  font-family: 'Roboto', sans-serif;\n  padding: 10px 20px;\n  font-size: 18px;\n  line-height: 1.5;\n  display: inline-block;\n  text-decoration: none;\n  border: none;\n  border-radius: 5px;\n  appearance: none;\n  cursor: pointer;\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n  transition: background-color 0.3s ease, box-shadow 0.3s ease;\n}\n\n.button:hover {\n  background-color: #45A049;\n  box-shadow: 0 6px 8px rgba(0, 0, 0, 0.2);\n}\n\nbody,\n.background {\n  background-color: #F5F5F5;\n  width: 100%;\n  height: 100%;\n  padding: 20px;\n  font-family: 'Roboto', sans-serif;\n}\n\nlabel,\ninput {\n  display: inline-block;\n  font-family: 'Roboto', sans-serif;\n  padding: 12px 10px;\n  color: #333;\n  text-decoration: none;\n  border: 1px solid #ccc;\n  border-radius: 4px;\n  transition: border-color 0.3s ease;\n}\n\ninput:focus {\n  border-color: #4CAF50;\n  outline: none;\n}\n\ninput:disabled {\n  background-color: #e7e7e7;\n  cursor: not-allowed;\n}\n\n.center {\n  margin: auto;\n  max-width: 700px;\n  width: 90%;\n  padding: 15px;\n  text-align: center;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n\n.center label {\n  width: 100%;\n  text-align: left;\n  margin-bottom: 5px;\n}\n\n.center input {\n  width: 100%;\n  margin-bottom: 10px;\n}\n\n.center button {\n  width: 100%;\n  margin-top: 15px;\n}\n\n.header {\n  display: block;\n  position: relative;\n  width: 200px;\n  height: 50px;\n  background-image: url('');\n  background-repeat: no-repeat;\n  background-size: contain;\n  margin: 0 auto 20px;\n  text-indent: -10000px;\n}\n\n@media (min-width: 768px) {\n  .center {\n    flex-direction: row;\n    justify-content: space-between;\n  }\n\n  .center label,\n  .center input {\n    width: 45%;\n  }\n\n  .center button {\n    width: 45%;\n  }\n}\n",
      "js": "//Using https://github.com/RobinHerbots/Inputmask for currency input mask\n$(\".currency-input\").inputmask(\"currency\", {\n  prefix: \"£\"\n});\n\nfunction calculateTotals() {\n  //Percentage can be changed quickly if needed.\n  var vatPercentage = 20;\n  var firstValue = currencyToNumber($(\"#FirstValue\").val());\n  var secondValue = currencyToNumber($(\"#SecondValue\").val());\n  var totalValue = firstValue + secondValue;\n  var vatValue = (totalValue / 100) * vatPercentage;\n  var grandTotalValue = totalValue + vatValue;\n  $(\"#TotalValue\").val(totalValue);\n  $(\"#VatValue\").val(vatValue);\n  $(\"#GrandTotalValue\").val(grandTotalValue);\n}\n\nfunction currencyToNumber(currencyText) {\n  //Removing the '£ and ',' then converting text to float for mathematical equations\n  return parseFloat(currencyText.replace(\"£\", \"\").replace(\",\", \"\"));\n}"
    }
  },
  {
    "option": "SqlGenerator",
    "code": {
      "html": "<script src=\"https://cdnjs.cloudflare.com/ajax/libs/PapaParse/5.3.0/papaparse.min.js\"></script>\n\n<h1>CSV to SQL Insert Generator</h1>\n<input type=\"file\" id=\"csvFileInput\" accept=\".csv\" />\n<button onclick=\"generateSQL()\">Generate SQL</button>\n\n<h2>SQL Insert Queries</h2>\n<textarea id=\"sqlOutput\" readonly></textarea>",
      "css": "body {\n  font-family: Arial, sans-serif;\n  margin: 20px;\n}\ntextarea {\n  width: 100%;\n  height: 200px;\n}\ninput[type=\"file\"] {\n  margin-bottom: 20px;\n}",
      "js": "function generateSQL() {\n  const fileInput = document.getElementById('csvFileInput');\n  if (!fileInput.files.length) {\n    alert(\"Please choose a CSV file first.\");\n    return;\n  }\n\n  const file = fileInput.files[0];\n  Papa.parse(file, {\n    header: true,\n    complete: function(results) {\n      const data = results.data;\n      const tableName = \"local_page_rollout\"; // Change table name if needed\n      const columns = Object.keys(data[0]);\n      let sqlQueries = `INSERT INTO ${tableName} (${columns.join(\", \")}) VALUES\\n`;\n\n      const values = data.map(row => {\n        const rowValues = columns.map(col => {\n          const value = row[col];\n          if (value === undefined || value === null || value === \"\") {\n            return \"NULL\";\n          } else if (typeof value === 'string') {\n            return `'${value.replace(/'/g, \"''\")}'`;\n          } else {\n            return value;\n          }\n        });\n        return `(${rowValues.join(\", \")})`;\n      });\n\n      sqlQueries += values.join(\",\\n\") + \";\";\n      document.getElementById('sqlOutput').textContent = sqlQueries;\n    }\n  });\n}"
    }
  },
  {
    "option": "CodePenGen",
    "code": {
      "html": " <h1>Code to JSON Formatter</h1>\n    <label for=\"optionName\">Option Name:</label>\n    <input type=\"text\" id=\"optionName\" placeholder=\"Enter option name\"><br><br>\n\n    <label for=\"htmlCode\">HTML Code:</label>\n    <textarea id=\"htmlCode\" rows=\"10\" cols=\"50\" placeholder=\"Enter HTML code\"></textarea><br><br>\n\n    <label for=\"cssCode\">CSS Code:</label>\n    <textarea id=\"cssCode\" rows=\"10\" cols=\"50\" placeholder=\"Enter CSS code\"></textarea><br><br>\n\n    <label for=\"jsCode\">JavaScript Code:</label>\n    <textarea id=\"jsCode\" rows=\"10\" cols=\"50\" placeholder=\"Enter JavaScript code\"></textarea><br><br>\n\n    <button onclick=\"formatToJson()\">Generate JSON</button>\n    <h2>Output:</h2>\n    <textarea id=\"output\" rows=\"10\" cols=\"50\" readonly></textarea>",
      "css": "",
      "js": "function formatToJson() {\n            const option = document.getElementById('optionName').value;\n            const html = document.getElementById('htmlCode').value;\n            const css = document.getElementById('cssCode').value;\n            const js = document.getElementById('jsCode').value;\n\n            const jsonObject = {\n                option: option,\n                code: {\n                    html: html,\n                    css: css,\n                    js: js\n                }\n            };\n\n            document.getElementById('output').value = JSON.stringify(jsonObject, null, 2);\n        }"
    }
  },
  {
    "option": "Revolve",
    "code": {
      "html": "<div class=\"container\">\n        <h1>Random Picker</h1>\n        <div class=\"input-section\">\n            <textarea id=\"choices\" placeholder=\"Enter choices separated by commas\"></textarea>\n            <button onclick=\"spin()\">Spin the Wheel</button>\n        </div>\n        <div class=\"wheel-container\">\n            <canvas id=\"wheel\" width=\"500\" height=\"500\"></canvas>\n        </div>\n        <div id=\"result\"></div>\n    </div>",
      "css": "/* styles.css */\nbody {\n    font-family: Arial, sans-serif;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: 100vh;\n    margin: 0;\n    background-color: #f0f0f0;\n}\n\n.container {\n    text-align: center;\n}\n\n.input-section {\n    margin-bottom: 20px;\n}\n\n#wheel {\n    border: 5px solid #333;\n    border-radius: 50%;\n}\n\n#result {\n    margin-top: 20px;\n    font-size: 24px;\n    font-weight: bold;\n}\n",
      "js": "let choices = [];\n\nfunction spin() {\n    const choicesText = document.getElementById('choices').value;\n    choices = choicesText.split(',').map(choice => choice.trim());\n    \n    if (choices.length < 2) {\n        alert('Please enter at least two choices.');\n        return;\n    }\n    \n    const canvas = document.getElementById('wheel');\n    const ctx = canvas.getContext('2d');\n    const arc = 2 * Math.PI / choices.length;\n    \n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    \n    choices.forEach((choice, i) => {\n        const angle = i * arc;\n        ctx.beginPath();\n        ctx.arc(250, 250, 250, angle, angle + arc, false);\n        ctx.lineTo(250, 250);\n        ctx.fillStyle = getRandomGrayShade();\n        ctx.fill();\n        ctx.save();\n        \n        ctx.translate(250 + Math.cos(angle + arc / 2) * 200, 250 + Math.sin(angle + arc / 2) * 200);\n        ctx.rotate(angle + arc / 2 + Math.PI / 2);\n        \n        // Draw copper circle\n        ctx.beginPath();\n        ctx.arc(0, 0, 50, 0, 2 * Math.PI, false);\n        ctx.fillStyle = '#b87333'; // Copper color\n        ctx.fill();\n        ctx.closePath();\n\n        // Draw text\n        ctx.fillStyle = '#000'; // Black color for text\n        ctx.fillText(choice, -ctx.measureText(choice).width / 2, 5);\n        \n        ctx.restore();\n    });\n\n    let selectedIndex = Math.floor(Math.random() * choices.length);\n    let randomSpin = selectedIndex * arc;\n    let spinDuration = 3000; // in ms\n    \n    canvas.style.transition = `transform ${spinDuration}ms ease-out`;\n    canvas.style.transform = `rotate(${randomSpin + 360 * 5 - (arc / 2)}deg)`;\n    \n    setTimeout(() => {\n        canvas.style.transition = '';\n        canvas.style.transform = '';\n        \n        const selectedChoice = choices[selectedIndex];\n        document.getElementById('result').textContent = `Selected: ${selectedChoice}`;\n        console.log(`Selected choice: ${selectedChoice}`);  // Log the winner to the console\n    }, spinDuration);\n}\n\nfunction getRandomGrayShade() {\n    const shade = Math.floor(Math.random() * 41) + 30; // Generates a number between 30 and 70\n    const gray = Math.floor(shade / 100 * 255); // Converts the range 30-70 to 0-255\n    return `rgb(${gray}, ${gray}, ${gray})`;\n}\n"
    }
  },
  {
  "option": "Runers",
  "code": {
    "html": " <div class=\"container\">\n        <h1>RuneScape Chat Effects</h1>\n        <textarea id=\"chat-input\" placeholder=\"Type your message here...\"></textarea>\n        <div class=\"effects\">\n            <label><input type=\"checkbox\" id=\"wave-effect\"> Wave</label>\n            <label><input type=\"checkbox\" id=\"shake-effect\"> Shake</label>\n            <label><input type=\"checkbox\" id=\"glow-effect\"> Glow</label>\n        </div>\n        <button id=\"apply-effects\">Apply Effects</button>\n        <div id=\"output-container\">\n            <p id=\"output-text\"></p>\n        </div>\n    </div>",
    "css": "body {\n    font-family: Arial, sans-serif;\n    text-align: center;\n    margin: 0;\n    padding: 20px;\n    background-color: #222;\n    color: #fff;\n}\n\n.container {\n    max-width: 600px;\n    margin: auto;\n    padding: 20px;\n    background-color: #333;\n    border-radius: 10px;\n    box-shadow: 0 0 10px rgba(0, 0, 0, 0.5);\n}\n\ntextarea {\n    width: 100%;\n    height: 100px;\n    margin-bottom: 10px;\n    padding: 10px;\n    border-radius: 5px;\n    border: none;\n    outline: none;\n    resize: none;\n}\n\n.effects label {\n    margin: 0 10px;\n}\n\nbutton {\n    padding: 10px 20px;\n    background-color: #555;\n    color: #fff;\n    border: none;\n    border-radius: 5px;\n    cursor: pointer;\n}\n\nbutton:hover {\n    background-color: #777;\n}\n\n#output-container {\n    margin-top: 20px;\n    min-height: 100px;\n    background-color: #444;\n    padding: 10px;\n    border-radius: 5px;\n}\n\n#wave-effect .wave {\n    display: inline-block;\n    animation: wave 1s infinite;\n}\n\n@keyframes wave {\n    0%, 100% {\n        transform: translateY(0);\n    }\n    50% {\n        transform: translateY(-10px);\n    }\n}\n\n#shake-effect .shake {\n    display: inline-block;\n    animation: shake 0.1s infinite;\n}\n\n@keyframes shake {\n    0%, 100% {\n        transform: translateX(0);\n    }\n    50% {\n        transform: translateX(5px);\n    }\n}\n\n#glow-effect {\n    color: white;\n    text-shadow: 0 0 5px #ff0, 0 0 10px #ff0, 0 0 20px #ff0;\n}\n",
    "js": "document.getElementById('apply-effects').addEventListener('click', () => {\n    const textInput = document.getElementById('chat-input').value;\n    const waveEffect = document.getElementById('wave-effect').checked;\n    const shakeEffect = document.getElementById('shake-effect').checked;\n    const glowEffect = document.getElementById('glow-effect').checked;\n\n    const outputText = document.getElementById('output-text');\n    outputText.innerHTML = ''; // Clear previous output\n\n    for (let i = 0; i < textInput.length; i++) {\n        const span = document.createElement('span');\n        span.textContent = textInput[i];\n\n        if (waveEffect) span.classList.add('wave');\n        if (shakeEffect) span.classList.add('shake');\n        if (glowEffect) span.style.textShadow = '0 0 5px #ff0, 0 0 10px #ff0, 0 0 20px #ff0';\n\n        outputText.appendChild(span);\n    }\n});\n"
  }
}
]
